#!/bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

create_database_user()
{
    if [ $# -ne 1 ]; then
        echo "create_database_user expects 1 argument, $# given"
        return
    fi

    su postgres -c "psql -tAc \"SELECT 1 FROM pg_roles WHERE rolname='$1'\" | grep -q 1 || createuser --no-createdb --no-createrole --no-superuser $1"
}


install_database()
{
    if [ $# -ne 2 ]; then
        echo "install_database expects 2 arguments, $# given"
        return
    fi

    su postgres -c "psql --list | cut -d ' ' -f 2 | grep -qx $1 || \
        (createdb -O cuz $1 && zcat /usr/share/ampy/$2 | psql -q -d $1)"
}


case "$1" in
    configure)
        if [ -z $2 ]; then
            # new install, no pre-existing package
            if [ `lsb_release -sc` = "wheezy" ]; then
                echo "======================================================"
                echo "Debian Wheezy has really old python packages:"
                echo
                echo "pip install psycopg2"
                echo "======================================================"
            fi

            # create the databases and install the schemas if they don't exist
            create_database_user "www-data"
            create_database_user "cuz"
            install_database "views" "views.sql.gz"
            install_database "ampmeta" "database.sql.gz"
            install_database "amp-asdb" "asdb-full.sql.gz"
        else
            # upgrading an existing install
            if dpkg --compare-versions "$2" le-nl "2.6-1"; then
                # remove constraint that is no longer needed
                su postgres -c "psql -q -c \"ALTER TABLE endpoint DROP CONSTRAINT valid_destination\" -d ampmeta || true"
                # add new column used to enable/disable tests
                su postgres -c "psql -q -c \"ALTER TABLE schedule ADD COLUMN schedule_enabled BOOLEAN NOT NULL DEFAULT true\" -d ampmeta || true"
            fi
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
